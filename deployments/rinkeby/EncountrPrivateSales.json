{
  "address": "0x351602e06A90A928B019c69498A5BC00aBA74eB0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ITreasury",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_authority",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IEncountrAuthority",
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "BuyerApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "SaleEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "saleToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "purchaseToken",
          "type": "address"
        }
      ],
      "name": "SaleStarted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_saleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "approveBuyer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_saleId",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_newBuyers",
          "type": "address[]"
        }
      ],
      "name": "approveBuyers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract IEncountrAuthority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_saleId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountOfEnctr",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "buyerAllowances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "saleToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "purchaseToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isTreasuryDeposit",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "maxTokensForSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxTokensForAddress",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minTokensForAddress",
          "type": "uint256"
        }
      ],
      "name": "createSale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentSaleId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sales",
      "outputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenPrice",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "saleToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "purchaseToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isTreasuryDeposit",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "maxTokensForSale",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalTokensSold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxTokensForAddress",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minTokensForAddress",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IEncountrAuthority",
          "name": "_newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopCurrentSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "stopSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "contract ITreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenToWithdraw",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xded714b1f455396edf4429f3ee9f10fc4146d4f268a5ce3d62d2d8607563e5e7",
  "receipt": {
    "to": null,
    "from": "0x744f7B6c2f65385e5D5af78119A45941ACfD125d",
    "contractAddress": "0x351602e06A90A928B019c69498A5BC00aBA74eB0",
    "transactionIndex": 48,
    "gasUsed": "1722759",
    "logsBloom": "0x
    "blockHash": "0xd06d7508025da282bf69e8b57733d75ec1c6290e2b8833fa95129f8398650003",
    "transactionHash": "0xded714b1f455396edf4429f3ee9f10fc4146d4f268a5ce3d62d2d8607563e5e7",
    "logs": [
      {
        "transactionIndex": 48,
        "blockNumber": 10623470,
        "transactionHash": "0xded714b1f455396edf4429f3ee9f10fc4146d4f268a5ce3d62d2d8607563e5e7",
        "address": "0x351602e06A90A928B019c69498A5BC00aBA74eB0",
        "topics": [
          "0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad",
          "0x0000000000000000000000007bc2ad91add329247346049da299d7fe30d85e49"
        ],
        "data": "0x",
        "logIndex": 81,
        "blockHash": "0xd06d7508025da282bf69e8b57733d75ec1c6290e2b8833fa95129f8398650003"
      }
    ],
    "blockNumber": 10623470,
    "cumulativeGasUsed": "16509977",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xEA51A2e1967B31b6dF6B823ef5ECCd8a6Ca12400",
    "0x7BC2aD91ADd329247346049Da299d7fE30D85e49"
  ],
  "numDeployments": 1,
  "solcInputHash": "c5b3a226cdd2d1b7726361c56a96f40c",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ITreasury\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEncountrAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"BuyerApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SaleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"saleToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"purchaseToken\",\"type\":\"address\"}],\"name\":\"SaleStarted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"approveBuyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_newBuyers\",\"type\":\"address[]\"}],\"name\":\"approveBuyers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IEncountrAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_saleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountOfEnctr\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyerAllowances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"saleToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"purchaseToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isTreasuryDeposit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensForSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensForAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTokensForAddress\",\"type\":\"uint256\"}],\"name\":\"createSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSaleId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sales\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"saleToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"purchaseToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isTreasuryDeposit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensForSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokensSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTokensForAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTokensForAddress\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEncountrAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopCurrentSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"stopSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"contract ITreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenToWithdraw\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sales/EncountrPrivateSales.sol\":\"EncountrPrivateSales\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc379ec1f3a741cc00948003e24687516b8fdb71914cd3b90b10589d74fe1d49f\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IERC20Metadata is IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x9690aab5d4ff226e2618763ca0eb46853234aba1582ba0392c2cdcb2b3c7274c\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IEncountrAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IEncountrAuthority {\\n    /* ========== EVENTS ========== */\\n\\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n\\n    event GovernorPulled(address indexed from, address indexed to);\\n    event GuardianPulled(address indexed from, address indexed to);\\n    event PolicyPulled(address indexed from, address indexed to);\\n    event VaultPulled(address indexed from, address indexed to);\\n\\n    /* ========== VIEW ========== */\\n\\n    function governor() external view returns (address);\\n\\n    function guardian() external view returns (address);\\n\\n    function policy() external view returns (address);\\n\\n    function vault() external view returns (address);\\n}\\n\",\"keccak256\":\"0x16e554d16b83ed28952991a5ba3e9a58addfc8c1dacd1fd82a462dc49f525053\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface ITreasury {\\n    function deposit(\\n        uint256 _amount,\\n        address _token,\\n        uint256 _profit\\n    ) external returns (uint256);\\n\\n    function withdraw(uint256 _amount, address _token) external;\\n\\n    function tokenValue(address _token, uint256 _amount) external view returns (uint256 value_);\\n\\n    function mint(address _recipient, uint256 _amount) external;\\n\\n    function manage(address _token, uint256 _amount) external;\\n\\n    function incurDebt(uint256 amount_, address token_) external;\\n\\n    function repayDebtWithReserve(uint256 amount_, address token_) external;\\n\\n    function excessReserves() external view returns (uint256);\\n\\n    function baseSupply() external view returns (uint256);\\n\\n    function isPermitted(uint _status, address _address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x951572914d5324edcd217ab31dc1bb1c3caeceb80cc18d33814a6193dd0bd595\",\"license\":\"AGPL-3.0\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.7.5;\\n\\nimport {IERC20} from \\\"../interfaces/IERC20.sol\\\";\\n\\n/// @notice Safe IERC20 and ETH transfer library that safely handles missing return values.\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol)\\n/// Taken from Solmate\\nlibrary SafeERC20 {\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transfer.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.approve.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"APPROVE_FAILED\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        (bool success, ) = to.call{value: amount}(new bytes(0));\\n\\n        require(success, \\\"ETH_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x778abe92595c692abcf3bec8b72f4491746626d1a057c76b97c8d1a7d759f7b0\",\"license\":\"AGPL-3.0-only\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.7.5;\\n\\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\\nlibrary SafeMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        assert(a == b * c + (a % b)); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    // Only used in the  BondingCalculator.sol\\n    function sqrrt(uint256 a) internal pure returns (uint256 c) {\\n        if (a > 3) {\\n            c = a;\\n            uint256 b = add(div(a, 2), 1);\\n            while (b < c) {\\n                c = b;\\n                b = div(add(div(a, b), b), 2);\\n            }\\n        } else if (a != 0) {\\n            c = 1;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf2edfc9cacbecb4aa48c6e5752a2d87939b450b64c18e77ad1098430d0772005\",\"license\":\"AGPL-3.0\"},\"contracts/sales/EncountrPrivateSales.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.7.5;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IERC20Metadata.sol\\\";\\nimport \\\"../interfaces/ITreasury.sol\\\";\\n\\nimport \\\"../types/EncountrAccessControlled.sol\\\";\\n\\nimport \\\"../libraries/SafeERC20.sol\\\";\\nimport \\\"../libraries/SafeMath.sol\\\";\\n\\nstruct Sale {\\n    bool active;\\n    uint256 id;\\n    uint256 tokenPrice;\\n    IERC20 saleToken;\\n    IERC20 purchaseToken;\\n    bool isTreasuryDeposit;\\n    uint256 maxTokensForSale;\\n    uint256 totalTokensSold;\\n    uint256 maxTokensForAddress;\\n    uint256 minTokensForAddress;\\n}\\n\\ncontract EncountrPrivateSales is EncountrAccessControlled {\\n\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    event SaleStarted(uint256 indexed id, uint256 tokenPrice, IERC20 saleToken, IERC20 purchaseToken);\\n    event SaleEnded(uint256 indexed id);\\n    event BuyerApproved(uint256 indexed id, address indexed buyer);\\n\\n    ITreasury public treasury;\\n\\n    mapping(uint256 => mapping(address => uint256)) public buyerAllowances;\\n    mapping(uint256 => Sale) public sales;\\n    uint256 public currentSaleId;\\n\\n    constructor(\\n        ITreasury _treasury,\\n        address _authority\\n    ) EncountrAccessControlled(IEncountrAuthority(_authority)) {\\n        treasury = _treasury;\\n        currentSaleId = 0;\\n    }\\n\\n    function createSale(\\n        uint256 tokenPrice,\\n        address saleToken,\\n        address purchaseToken,\\n        bool isTreasuryDeposit,\\n        uint256 maxTokensForSale,\\n        uint256 maxTokensForAddress,\\n        uint256 minTokensForAddress\\n    ) external onlyGovernor() returns (uint256) {\\n        if (isTreasuryDeposit) {\\n            require(tokenPrice >= 10**IERC20Metadata(purchaseToken).decimals(), \\\"need ENCTR backing\\\");\\n        } else {\\n            require(tokenPrice > 0, \\\"no free lunch\\\");\\n        }\\n\\n        require(sales[currentSaleId].active == false, \\\"sale ongoing\\\");\\n        require(treasury.isPermitted(2, purchaseToken), \\\"not a valid purchase token\\\");\\n\\n        currentSaleId += 1;\\n\\n        Sale storage newSale = sales[currentSaleId];\\n        newSale.active = true;\\n        newSale.id = currentSaleId;\\n        newSale.tokenPrice = tokenPrice;\\n        newSale.saleToken = IERC20(saleToken);\\n        newSale.purchaseToken = IERC20(purchaseToken);\\n        newSale.isTreasuryDeposit = isTreasuryDeposit;\\n        newSale.maxTokensForSale = maxTokensForSale;\\n        newSale.totalTokensSold = 0;\\n        newSale.maxTokensForAddress = maxTokensForAddress;\\n        newSale.minTokensForAddress = minTokensForAddress;\\n\\n        emit SaleStarted(currentSaleId, tokenPrice, IERC20(saleToken), IERC20(purchaseToken));\\n        return currentSaleId;\\n    }\\n\\n    function stopSale(uint256 id) external onlyGovernor() {\\n        _stop(id);\\n    }\\n\\n    function stopCurrentSale() external onlyGovernor() {\\n        _stop(currentSaleId);\\n    }\\n\\n    function _stop(uint256 id) internal {\\n        require(sales[id].active, \\\"sale is not active\\\");\\n        sales[id].active = false;\\n        emit SaleEnded(id);\\n    }\\n\\n    function _approveBuyer(uint256 _saleId, address _buyer) internal {\\n        require(sales[_saleId].active, \\\"sale is not active\\\");\\n        buyerAllowances[_saleId][_buyer] = sales[_saleId].maxTokensForAddress;\\n        emit BuyerApproved(_saleId, _buyer);\\n    }\\n\\n    function approveBuyer(uint256 _saleId, address _buyer) external onlyGovernor() {\\n        _approveBuyer(_saleId, _buyer);\\n    }\\n\\n    function approveBuyers(uint256 _saleId, address[] calldata _newBuyers) external onlyGovernor() returns (uint256) {\\n        for(uint256 i = 0; i < _newBuyers.length; i++) {\\n            _approveBuyer(_saleId, _newBuyers[i]);\\n        }\\n\\n        return _newBuyers.length;\\n    }\\n\\n    function _buyFromTreasury(uint256 _saleId, uint256 _amountOfEnctr) internal {\\n        uint8 decimals = IERC20Metadata(address(sales[_saleId].saleToken)).decimals();\\n        uint256 totalPrice = sales[_saleId].tokenPrice.mul(_amountOfEnctr).div(10**decimals);\\n\\n        sales[_saleId].purchaseToken.safeTransferFrom(msg.sender, address(this), totalPrice);\\n        sales[_saleId].purchaseToken.safeApprove(address(treasury), totalPrice);\\n        treasury.deposit(\\n            totalPrice,\\n            address(sales[_saleId].purchaseToken),\\n            totalPrice.div(10**decimals).sub(_amountOfEnctr)\\n        );\\n\\n        sales[_saleId].saleToken.safeTransfer(msg.sender, _amountOfEnctr);\\n    }\\n\\n    function _buyFromContract(uint256 _saleId, uint256 _amountOfEnctr) internal {\\n        uint8 decimals = IERC20Metadata(address(sales[_saleId].saleToken)).decimals();\\n        uint256 totalPrice = sales[_saleId].tokenPrice.mul(_amountOfEnctr).div(10**decimals);\\n        sales[_saleId].purchaseToken.safeTransferFrom(msg.sender, address(this), totalPrice);\\n        sales[_saleId].saleToken.safeTransfer(msg.sender, _amountOfEnctr);\\n    }\\n\\n    function buy(uint256 _saleId, uint256 _amountOfEnctr) external {\\n        require(sales[_saleId].active, \\\"sale is not active\\\");\\n        require(buyerAllowances[_saleId][msg.sender] >= _amountOfEnctr, \\\"buyer not approved\\\");\\n        require(_amountOfEnctr >= sales[_saleId].minTokensForAddress, \\\"below minimum for sale\\\");\\n        require(sales[_saleId].totalTokensSold + _amountOfEnctr <= sales[_saleId].maxTokensForSale, \\\"sold out\\\");\\n\\n        if (sales[_saleId].isTreasuryDeposit) {\\n            _buyFromTreasury(_saleId, _amountOfEnctr);\\n        } else {\\n            _buyFromContract(_saleId, _amountOfEnctr);\\n        }\\n\\n        buyerAllowances[_saleId][msg.sender] -= _amountOfEnctr;\\n        sales[_saleId].totalTokensSold += _amountOfEnctr;\\n    }\\n\\n    function withdrawTokens(address _tokenToWithdraw) external onlyGovernor() {\\n        IERC20(_tokenToWithdraw).transfer(msg.sender, IERC20(_tokenToWithdraw).balanceOf(address(this)));\\n    }\\n}\\n\",\"keccak256\":\"0x9121cf48e3c303661658f5fea20fc4fb94e1840f3d8a69db0aa3aa01e93d9338\",\"license\":\"AGPL-3.0-only\"},\"contracts/types/EncountrAccessControlled.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.7.5;\\n\\nimport \\\"../interfaces/IEncountrAuthority.sol\\\";\\n\\nabstract contract EncountrAccessControlled {\\n    /* ========== EVENTS ========== */\\n\\n    event AuthorityUpdated(IEncountrAuthority indexed authority);\\n\\n    string UNAUTHORIZED = \\\"UNAUTHORIZED\\\"; // save gas\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IEncountrAuthority public authority;\\n\\n    /* ========== Constructor ========== */\\n\\n    constructor(IEncountrAuthority _authority) {\\n        authority = _authority;\\n        emit AuthorityUpdated(_authority);\\n    }\\n\\n    /* ========== MODIFIERS ========== */\\n\\n    modifier onlyGovernor() {\\n        require(msg.sender == authority.governor(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyGuardian() {\\n        require(msg.sender == authority.guardian(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyPolicy() {\\n        require(msg.sender == authority.policy(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyVault() {\\n        require(msg.sender == authority.vault(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    /* ========== GOV ONLY ========== */\\n\\n    function setAuthority(IEncountrAuthority _newAuthority) external onlyGovernor {\\n        authority = _newAuthority;\\n        emit AuthorityUpdated(_newAuthority);\\n    }\\n}\\n\",\"keccak256\":\"0x904ec1dc8ac82cd6e07fe1980fa95b9401ba6c910aed2de99dda84903c39f69f\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60c0604052600c60808190526b15539055551213d49256915160a21b60a09081526200002f9160009190620000e3565b503480156200003d57600080fd5b5060405162001e7c38038062001e7c833981810160405260408110156200006357600080fd5b508051602090910151600180546001600160a01b0319166001600160a01b0383169081179091556040518291907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a25050600280546001600160a01b0319166001600160a01b039290921691909117905560006005556200018f565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200011b576000855562000166565b82601f106200013657805160ff191683800117855562000166565b8280016001018555821562000166579182015b828111156200016657825182559160200191906001019062000149565b506200017492915062000178565b5090565b5b8082111562000174576000815560010162000179565b611cdd806200019f6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80637a9e5e4b1161008c578063b5f522f711610066578063b5f522f714610297578063bf7e214f14610312578063d6febde81461031a578063f8dd1f761461033d576100df565b80637a9e5e4b146102195780639d8ede971461023f5780639e92c3651461026b576100df565b806349df728c116100bd57806349df728c1461015857806358c16cd61461017e57806361d027b3146101f5576100df565b8063152cd762146100e45780632e849894146101465780633370e4321461014e575b600080fd5b610134600480360360e08110156100fa57600080fd5b508035906001600160a01b036020820135811691604081013590911690606081013515159060808101359060a08101359060c0013561035a565b60408051918252519081900360200190f35b610134610828565b61015661082e565b005b6101566004803603602081101561016e57600080fd5b50356001600160a01b0316610927565b6101346004803603604081101561019457600080fd5b813591908101906040810160208201356401000000008111156101b657600080fd5b8201836020820111156101c857600080fd5b803590602001918460208302840111640100000000831117156101ea57600080fd5b509092509050610b32565b6101fd610c56565b604080516001600160a01b039092168252519081900360200190f35b6101566004803603602081101561022f57600080fd5b50356001600160a01b0316610c65565b6101566004803603604081101561025557600080fd5b50803590602001356001600160a01b0316610db3565b6101346004803603604081101561028157600080fd5b50803590602001356001600160a01b0316610ead565b6102b4600480360360208110156102ad57600080fd5b5035610eca565b604080519a15158b5260208b0199909952898901979097526001600160a01b0395861660608a015293909416608088015290151560a087015260c086015260e085019190915261010084015261012083015251908190036101400190f35b6101fd610f2c565b6101566004803603604081101561033057600080fd5b5080359060200135610f3b565b6101566004803603602081101561035357600080fd5b5035611147565b6001546040805163030d028960e21b815290516000926001600160a01b031691630c340a24916004808301926020929190829003018186803b15801561039f57600080fd5b505afa1580156103b3573d6000803e3d6000fd5b505050506040513d60208110156103c957600080fd5b50516000906001600160a01b031633146104765760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b820191906000526020600020905b81548152906001019060200180831161044a57829003601f168201915b50509250505060405180910390fd5b50841561054157856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b657600080fd5b505afa1580156104ca573d6000803e3d6000fd5b505050506040513d60208110156104e057600080fd5b505160ff16600a0a88101561053c576040805162461bcd60e51b815260206004820152601260248201527f6e65656420454e435452206261636b696e670000000000000000000000000000604482015290519081900360640190fd5b610596565b60008811610596576040805162461bcd60e51b815260206004820152600d60248201527f6e6f2066726565206c756e636800000000000000000000000000000000000000604482015290519081900360640190fd5b60055460009081526004602052604090205460ff16156105fd576040805162461bcd60e51b815260206004820152600c60248201527f73616c65206f6e676f696e670000000000000000000000000000000000000000604482015290519081900360640190fd5b6002805460408051630a6c9a2160e01b815260048101939093526001600160a01b0389811660248501529051911691630a6c9a21916044808301926020929190829003018186803b15801561065157600080fd5b505afa158015610665573d6000803e3d6000fd5b505050506040513d602081101561067b57600080fd5b50516106ce576040805162461bcd60e51b815260206004820152601a60248201527f6e6f7420612076616c696420707572636861736520746f6b656e000000000000604482015290519081900360640190fd5b60016005600082825401925050819055506000600460006005548152602001908152602001600020905060018160000160006101000a81548160ff0219169083151502179055506005548160010181905550888160020181905550878160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550868160040160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550858160040160146101000a81548160ff021916908315150217905550848160050181905550600081600601819055508381600701819055508281600801819055506005547f9a552eccfafe50984cba5e437afb77b50d96cce433b3f5a48a025779903d870f8a8a8a60405180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060405180910390a25050600554979650505050505050565b60055481565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561087c57600080fd5b505afa158015610890573d6000803e3d6000fd5b505050506040513d60208110156108a657600080fd5b50516000906001600160a01b031633146109195760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b5061092560055461123f565b565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561097557600080fd5b505afa158015610989573d6000803e3d6000fd5b505050506040513d602081101561099f57600080fd5b50516000906001600160a01b03163314610a125760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b50806001600160a01b031663a9059cbb33836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610a7057600080fd5b505afa158015610a84573d6000803e3d6000fd5b505050506040513d6020811015610a9a57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b158015610b0357600080fd5b505af1158015610b17573d6000803e3d6000fd5b505050506040513d6020811015610b2d57600080fd5b505050565b6001546040805163030d028960e21b815290516000926001600160a01b031691630c340a24916004808301926020929190829003018186803b158015610b7757600080fd5b505afa158015610b8b573d6000803e3d6000fd5b505050506040513d6020811015610ba157600080fd5b50516000906001600160a01b03163314610c145760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b5060005b82811015610c4d57610c4585858584818110610c3057fe5b905060200201356001600160a01b03166112d7565b600101610c18565b50909392505050565b6002546001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610cb357600080fd5b505afa158015610cc7573d6000803e3d6000fd5b505050506040513d6020811015610cdd57600080fd5b50516000906001600160a01b03163314610d505760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b50600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0157600080fd5b505afa158015610e15573d6000803e3d6000fd5b505050506040513d6020811015610e2b57600080fd5b50516000906001600160a01b03163314610e9e5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b50610ea982826112d7565b5050565b600360209081526000928352604080842090915290825290205481565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006860154600787015460089097015460ff96871698959794966001600160a01b0396871696851695600160a01b9095041693908a565b6001546001600160a01b031681565b60008281526004602052604090205460ff16610f93576040805162461bcd60e51b815260206004820152601260248201527173616c65206973206e6f742061637469766560701b604482015290519081900360640190fd5b6000828152600360209081526040808320338452909152902054811115611001576040805162461bcd60e51b815260206004820152601260248201527f6275796572206e6f7420617070726f7665640000000000000000000000000000604482015290519081900360640190fd5b600082815260046020526040902060080154811015611067576040805162461bcd60e51b815260206004820152601660248201527f62656c6f77206d696e696d756d20666f722073616c6500000000000000000000604482015290519081900360640190fd5b60008281526004602052604090206005810154600690910154820111156110d5576040805162461bcd60e51b815260206004820152600860248201527f736f6c64206f7574000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008281526004602081905260409091200154600160a01b900460ff161561110657611101828261138b565b611110565b611110828261157c565b6000828152600360209081526040808320338452825280832080548590039055938252600490529190912060060180549091019055565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561119557600080fd5b505afa1580156111a9573d6000803e3d6000fd5b505050506040513d60208110156111bf57600080fd5b50516000906001600160a01b031633146112325760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b5061123c8161123f565b50565b60008181526004602052604090205460ff16611297576040805162461bcd60e51b815260206004820152601260248201527173616c65206973206e6f742061637469766560701b604482015290519081900360640190fd5b600081815260046020526040808220805460ff191690555182917f94bb74a9473ae4063ec1e73dc3e35fd4b5abe9cc1e43ad0db84e5358559ccd5a91a250565b60008281526004602052604090205460ff1661132f576040805162461bcd60e51b815260206004820152601260248201527173616c65206973206e6f742061637469766560701b604482015290519081900360640190fd5b600082815260046020908152604080832060070154600383528184206001600160a01b03861680865293528184205551909184917fcf93094854a81f1a3d7c99633cff4dac98837e96ebc9d5529993dea33242cc679190a35050565b600082815260046020818152604080842060030154815163313ce56760e01b815291516001600160a01b039091169363313ce567938382019390929190829003018186803b1580156113dc57600080fd5b505afa1580156113f0573d6000803e3d6000fd5b505050506040513d602081101561140657600080fd5b50516000848152600460205260408120600201549192509061143a9060ff8416600a0a906114349086611676565b906116d8565b60008581526004602081905260409091200154909150611465906001600160a01b031633308461171a565b60025460008581526004602081905260409091200154611492916001600160a01b0391821691168361188d565b600254600085815260046020819052604090912001546001600160a01b039182169163bc157ac1918491166114d7876114d18460ff8a16600a0a6116d8565b906119f7565b6040518463ffffffff1660e01b815260040180848152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b15801561152457600080fd5b505af1158015611538573d6000803e3d6000fd5b505050506040513d602081101561154e57600080fd5b5050600084815260046020526040902060030154611576906001600160a01b03163385611a39565b50505050565b600082815260046020818152604080842060030154815163313ce56760e01b815291516001600160a01b039091169363313ce567938382019390929190829003018186803b1580156115cd57600080fd5b505afa1580156115e1573d6000803e3d6000fd5b505050506040513d60208110156115f757600080fd5b5051600084815260046020526040812060020154919250906116259060ff8416600a0a906114349086611676565b60008581526004602081905260409091200154909150611650906001600160a01b031633308461171a565b600084815260046020526040902060030154611576906001600160a01b03163385611a39565b600082611685575060006116d2565b8282028284828161169257fe5b04146116cf5760405162461bcd60e51b8152600401808060200182810382526021815260200180611cb06021913960400191505060405180910390fd5b90505b92915050565b60006116cf83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611b9c565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17815292518251600094606094938a169392918291908083835b6020831061179f5780518252601f199092019160209182019101611780565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611801576040519150601f19603f3d011682016040523d82523d6000602084013e611806565b606091505b5091509150818015611834575080511580611834575080806020019051602081101561183157600080fd5b50515b611885576040805162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015290519081900360640190fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b178152925182516000946060949389169392918291908083835b6020831061190a5780518252601f1990920191602091820191016118eb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461196c576040519150601f19603f3d011682016040523d82523d6000602084013e611971565b606091505b509150915081801561199f57508051158061199f575080806020019051602081101561199c57600080fd5b50515b6119f0576040805162461bcd60e51b815260206004820152600e60248201527f415050524f56455f4641494c4544000000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b60006116cf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c55565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b60208310611ab65780518252601f199092019160209182019101611a97565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611b18576040519150601f19603f3d011682016040523d82523d6000602084013e611b1d565b606091505b5091509150818015611b4b575080511580611b4b5750808060200190516020811015611b4857600080fd5b50515b6119f0576040805162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015290519081900360640190fd5b60008183611c285760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bed578181015183820152602001611bd5565b50505050905090810190601f168015611c1a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581611c3457fe5b049050838581611c4057fe5b06818502018514611c4d57fe5b949350505050565b60008184841115611ca75760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611bed578181015183820152602001611bd5565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c6343000705000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c80637a9e5e4b1161008c578063b5f522f711610066578063b5f522f714610297578063bf7e214f14610312578063d6febde81461031a578063f8dd1f761461033d576100df565b80637a9e5e4b146102195780639d8ede971461023f5780639e92c3651461026b576100df565b806349df728c116100bd57806349df728c1461015857806358c16cd61461017e57806361d027b3146101f5576100df565b8063152cd762146100e45780632e849894146101465780633370e4321461014e575b600080fd5b610134600480360360e08110156100fa57600080fd5b508035906001600160a01b036020820135811691604081013590911690606081013515159060808101359060a08101359060c0013561035a565b60408051918252519081900360200190f35b610134610828565b61015661082e565b005b6101566004803603602081101561016e57600080fd5b50356001600160a01b0316610927565b6101346004803603604081101561019457600080fd5b813591908101906040810160208201356401000000008111156101b657600080fd5b8201836020820111156101c857600080fd5b803590602001918460208302840111640100000000831117156101ea57600080fd5b509092509050610b32565b6101fd610c56565b604080516001600160a01b039092168252519081900360200190f35b6101566004803603602081101561022f57600080fd5b50356001600160a01b0316610c65565b6101566004803603604081101561025557600080fd5b50803590602001356001600160a01b0316610db3565b6101346004803603604081101561028157600080fd5b50803590602001356001600160a01b0316610ead565b6102b4600480360360208110156102ad57600080fd5b5035610eca565b604080519a15158b5260208b0199909952898901979097526001600160a01b0395861660608a015293909416608088015290151560a087015260c086015260e085019190915261010084015261012083015251908190036101400190f35b6101fd610f2c565b6101566004803603604081101561033057600080fd5b5080359060200135610f3b565b6101566004803603602081101561035357600080fd5b5035611147565b6001546040805163030d028960e21b815290516000926001600160a01b031691630c340a24916004808301926020929190829003018186803b15801561039f57600080fd5b505afa1580156103b3573d6000803e3d6000fd5b505050506040513d60208110156103c957600080fd5b50516000906001600160a01b031633146104765760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b820191906000526020600020905b81548152906001019060200180831161044a57829003601f168201915b50509250505060405180910390fd5b50841561054157856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b657600080fd5b505afa1580156104ca573d6000803e3d6000fd5b505050506040513d60208110156104e057600080fd5b505160ff16600a0a88101561053c576040805162461bcd60e51b815260206004820152601260248201527f6e65656420454e435452206261636b696e670000000000000000000000000000604482015290519081900360640190fd5b610596565b60008811610596576040805162461bcd60e51b815260206004820152600d60248201527f6e6f2066726565206c756e636800000000000000000000000000000000000000604482015290519081900360640190fd5b60055460009081526004602052604090205460ff16156105fd576040805162461bcd60e51b815260206004820152600c60248201527f73616c65206f6e676f696e670000000000000000000000000000000000000000604482015290519081900360640190fd5b6002805460408051630a6c9a2160e01b815260048101939093526001600160a01b0389811660248501529051911691630a6c9a21916044808301926020929190829003018186803b15801561065157600080fd5b505afa158015610665573d6000803e3d6000fd5b505050506040513d602081101561067b57600080fd5b50516106ce576040805162461bcd60e51b815260206004820152601a60248201527f6e6f7420612076616c696420707572636861736520746f6b656e000000000000604482015290519081900360640190fd5b60016005600082825401925050819055506000600460006005548152602001908152602001600020905060018160000160006101000a81548160ff0219169083151502179055506005548160010181905550888160020181905550878160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550868160040160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550858160040160146101000a81548160ff021916908315150217905550848160050181905550600081600601819055508381600701819055508281600801819055506005547f9a552eccfafe50984cba5e437afb77b50d96cce433b3f5a48a025779903d870f8a8a8a60405180848152602001836001600160a01b03168152602001826001600160a01b03168152602001935050505060405180910390a25050600554979650505050505050565b60055481565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561087c57600080fd5b505afa158015610890573d6000803e3d6000fd5b505050506040513d60208110156108a657600080fd5b50516000906001600160a01b031633146109195760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b5061092560055461123f565b565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561097557600080fd5b505afa158015610989573d6000803e3d6000fd5b505050506040513d602081101561099f57600080fd5b50516000906001600160a01b03163314610a125760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b50806001600160a01b031663a9059cbb33836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610a7057600080fd5b505afa158015610a84573d6000803e3d6000fd5b505050506040513d6020811015610a9a57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b158015610b0357600080fd5b505af1158015610b17573d6000803e3d6000fd5b505050506040513d6020811015610b2d57600080fd5b505050565b6001546040805163030d028960e21b815290516000926001600160a01b031691630c340a24916004808301926020929190829003018186803b158015610b7757600080fd5b505afa158015610b8b573d6000803e3d6000fd5b505050506040513d6020811015610ba157600080fd5b50516000906001600160a01b03163314610c145760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b5060005b82811015610c4d57610c4585858584818110610c3057fe5b905060200201356001600160a01b03166112d7565b600101610c18565b50909392505050565b6002546001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610cb357600080fd5b505afa158015610cc7573d6000803e3d6000fd5b505050506040513d6020811015610cdd57600080fd5b50516000906001600160a01b03163314610d505760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b50600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610e0157600080fd5b505afa158015610e15573d6000803e3d6000fd5b505050506040513d6020811015610e2b57600080fd5b50516000906001600160a01b03163314610e9e5760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b50610ea982826112d7565b5050565b600360209081526000928352604080842090915290825290205481565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006860154600787015460089097015460ff96871698959794966001600160a01b0396871696851695600160a01b9095041693908a565b6001546001600160a01b031681565b60008281526004602052604090205460ff16610f93576040805162461bcd60e51b815260206004820152601260248201527173616c65206973206e6f742061637469766560701b604482015290519081900360640190fd5b6000828152600360209081526040808320338452909152902054811115611001576040805162461bcd60e51b815260206004820152601260248201527f6275796572206e6f7420617070726f7665640000000000000000000000000000604482015290519081900360640190fd5b600082815260046020526040902060080154811015611067576040805162461bcd60e51b815260206004820152601660248201527f62656c6f77206d696e696d756d20666f722073616c6500000000000000000000604482015290519081900360640190fd5b60008281526004602052604090206005810154600690910154820111156110d5576040805162461bcd60e51b815260206004820152600860248201527f736f6c64206f7574000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60008281526004602081905260409091200154600160a01b900460ff161561110657611101828261138b565b611110565b611110828261157c565b6000828152600360209081526040808320338452825280832080548590039055938252600490529190912060060180549091019055565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561119557600080fd5b505afa1580156111a9573d6000803e3d6000fd5b505050506040513d60208110156111bf57600080fd5b50516000906001600160a01b031633146112325760405162461bcd60e51b81526020600482019081528254600260001961010060018416150201909116046024830181905290918291604490910190849080156104675780601f1061043c57610100808354040283529160200191610467565b5061123c8161123f565b50565b60008181526004602052604090205460ff16611297576040805162461bcd60e51b815260206004820152601260248201527173616c65206973206e6f742061637469766560701b604482015290519081900360640190fd5b600081815260046020526040808220805460ff191690555182917f94bb74a9473ae4063ec1e73dc3e35fd4b5abe9cc1e43ad0db84e5358559ccd5a91a250565b60008281526004602052604090205460ff1661132f576040805162461bcd60e51b815260206004820152601260248201527173616c65206973206e6f742061637469766560701b604482015290519081900360640190fd5b600082815260046020908152604080832060070154600383528184206001600160a01b03861680865293528184205551909184917fcf93094854a81f1a3d7c99633cff4dac98837e96ebc9d5529993dea33242cc679190a35050565b600082815260046020818152604080842060030154815163313ce56760e01b815291516001600160a01b039091169363313ce567938382019390929190829003018186803b1580156113dc57600080fd5b505afa1580156113f0573d6000803e3d6000fd5b505050506040513d602081101561140657600080fd5b50516000848152600460205260408120600201549192509061143a9060ff8416600a0a906114349086611676565b906116d8565b60008581526004602081905260409091200154909150611465906001600160a01b031633308461171a565b60025460008581526004602081905260409091200154611492916001600160a01b0391821691168361188d565b600254600085815260046020819052604090912001546001600160a01b039182169163bc157ac1918491166114d7876114d18460ff8a16600a0a6116d8565b906119f7565b6040518463ffffffff1660e01b815260040180848152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b15801561152457600080fd5b505af1158015611538573d6000803e3d6000fd5b505050506040513d602081101561154e57600080fd5b5050600084815260046020526040902060030154611576906001600160a01b03163385611a39565b50505050565b600082815260046020818152604080842060030154815163313ce56760e01b815291516001600160a01b039091169363313ce567938382019390929190829003018186803b1580156115cd57600080fd5b505afa1580156115e1573d6000803e3d6000fd5b505050506040513d60208110156115f757600080fd5b5051600084815260046020526040812060020154919250906116259060ff8416600a0a906114349086611676565b60008581526004602081905260409091200154909150611650906001600160a01b031633308461171a565b600084815260046020526040902060030154611576906001600160a01b03163385611a39565b600082611685575060006116d2565b8282028284828161169257fe5b04146116cf5760405162461bcd60e51b8152600401808060200182810382526021815260200180611cb06021913960400191505060405180910390fd5b90505b92915050565b60006116cf83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611b9c565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17815292518251600094606094938a169392918291908083835b6020831061179f5780518252601f199092019160209182019101611780565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611801576040519150601f19603f3d011682016040523d82523d6000602084013e611806565b606091505b5091509150818015611834575080511580611834575080806020019051602081101561183157600080fd5b50515b611885576040805162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015290519081900360640190fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b178152925182516000946060949389169392918291908083835b6020831061190a5780518252601f1990920191602091820191016118eb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461196c576040519150601f19603f3d011682016040523d82523d6000602084013e611971565b606091505b509150915081801561199f57508051158061199f575080806020019051602081101561199c57600080fd5b50515b6119f0576040805162461bcd60e51b815260206004820152600e60248201527f415050524f56455f4641494c4544000000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b60006116cf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c55565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b60208310611ab65780518252601f199092019160209182019101611a97565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611b18576040519150601f19603f3d011682016040523d82523d6000602084013e611b1d565b606091505b5091509150818015611b4b575080511580611b4b5750808060200190516020811015611b4857600080fd5b50515b6119f0576040805162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015290519081900360640190fd5b60008183611c285760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bed578181015183820152602001611bd5565b50505050905090810190601f168015611c1a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581611c3457fe5b049050838581611c4057fe5b06818502018514611c4d57fe5b949350505050565b60008184841115611ca75760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611bed578181015183820152602001611bd5565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c6343000705000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9728,
        "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
        "label": "UNAUTHORIZED",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 9730,
        "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
        "label": "authority",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IEncountrAuthority)4782"
      },
      {
        "astId": 7770,
        "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
        "label": "treasury",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(ITreasury)4965"
      },
      {
        "astId": 7776,
        "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
        "label": "buyerAllowances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 7780,
        "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
        "label": "sales",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Sale)7740_storage)"
      },
      {
        "astId": 7782,
        "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
        "label": "currentSaleId",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)4646": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IEncountrAuthority)4782": {
        "encoding": "inplace",
        "label": "contract IEncountrAuthority",
        "numberOfBytes": "20"
      },
      "t_contract(ITreasury)4965": {
        "encoding": "inplace",
        "label": "contract ITreasury",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Sale)7740_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Sale)",
        "numberOfBytes": "32",
        "value": "t_struct(Sale)7740_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Sale)7740_storage": {
        "encoding": "inplace",
        "label": "struct Sale",
        "members": [
          {
            "astId": 7721,
            "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
            "label": "active",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 7723,
            "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
            "label": "id",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7725,
            "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
            "label": "tokenPrice",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 7727,
            "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
            "label": "saleToken",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC20)4646"
          },
          {
            "astId": 7729,
            "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
            "label": "purchaseToken",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IERC20)4646"
          },
          {
            "astId": 7731,
            "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
            "label": "isTreasuryDeposit",
            "offset": 20,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 7733,
            "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
            "label": "maxTokensForSale",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 7735,
            "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
            "label": "totalTokensSold",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 7737,
            "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
            "label": "maxTokensForAddress",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 7739,
            "contract": "contracts/sales/EncountrPrivateSales.sol:EncountrPrivateSales",
            "label": "minTokensForAddress",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}